basePath: /api/v1
definitions:
  dtos.DeployThanosRequest:
    properties:
      adminAccount:
        type: string
      awsAccessKey:
        type: string
      awsRegion:
        type: string
      awsSecretAccessKey:
        type: string
      batchSubmissionFrequency:
        description: seconds
        minimum: 1
        type: integer
      batcherAccount:
        type: string
      chainName:
        type: string
      challengePeriod:
        description: seconds
        minimum: 1
        type: integer
      deploymentPath:
        type: string
      l1BeaconUrl:
        type: string
      l1RpcUrl:
        type: string
      l2BlockTime:
        description: seconds
        minimum: 1
        type: integer
      network:
        allOf:
        - $ref: '#/definitions/entities.DeploymentNetwork'
        enum:
        - Mainnet
        - Testnet
        - LocalDevnet
      outputRootFrequency:
        description: seconds
        minimum: 1
        type: integer
      proposerAccount:
        type: string
      registerCandidate:
        type: boolean
      registerCandidateParams:
        $ref: '#/definitions/dtos.RegisterCandidateRequest'
      sequencerAccount:
        type: string
    required:
    - adminAccount
    - awsAccessKey
    - awsRegion
    - awsSecretAccessKey
    - batchSubmissionFrequency
    - batcherAccount
    - chainName
    - challengePeriod
    - l1BeaconUrl
    - l1RpcUrl
    - l2BlockTime
    - network
    - outputRootFrequency
    - proposerAccount
    - sequencerAccount
    type: object
  dtos.InstallBlockExplorerRequest:
    properties:
      coinmarketcapKey:
        type: string
      databasePassword:
        type: string
      databaseUsername:
        type: string
      walletConnectId:
        type: string
    required:
    - coinmarketcapKey
    - databasePassword
    - databaseUsername
    - walletConnectId
    type: object
  dtos.InstallMonitoringRequest:
    properties:
      grafanaPassword:
        type: string
    required:
    - grafanaPassword
    type: object
  dtos.RegisterCandidateRequest:
    properties:
      amount:
        minimum: 0
        type: number
      memo:
        type: string
      nameInfo:
        type: string
    required:
    - amount
    - memo
    type: object
  dtos.UpdateNetworkRequest:
    properties:
      l1BeaconUrl:
        type: string
      l1RpcUrl:
        type: string
    type: object
  entities.DeploymentNetwork:
    enum:
    - Mainnet
    - Testnet
    - LocalDevnet
    type: string
    x-enum-varnames:
    - DeploymentNetworkMainnet
    - DeploymentNetworkTestnet
    - DeploymentNetworkLocalDevnet
  entities.Response:
    properties:
      data: {}
      message:
        type: string
      status:
        type: integer
    type: object
host: localhost:${PORT}
info:
  contact: {}
  description: TRH Backend API
  title: TRH Backend
  version: "1.0"
paths:
  /health:
    get:
      consumes:
      - application/json
      description: Get health
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Response'
      summary: Get health
      tags:
      - health
  /stacks/thanos:
    get:
      consumes:
      - application/json
      description: Get All Stacks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Response'
      summary: Get All Stacks
      tags:
      - Thanos Stack
    post:
      consumes:
      - application/json
      description: Deploy Thanos Stack
      parameters:
      - description: Deploy Thanos Stack Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.DeployThanosRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Response'
      summary: Deploy Thanos Stack
      tags:
      - Thanos Stack
  /stacks/thanos/{id}:
    delete:
      consumes:
      - application/json
      description: Terminate Thanos Stack
      parameters:
      - description: Thanos Stack ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Response'
      summary: Terminate Thanos Stack
      tags:
      - Thanos Stack
    get:
      consumes:
      - application/json
      description: Get Stack By ID
      parameters:
      - description: Thanos Stack ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Response'
      summary: Get Stack By ID
      tags:
      - Thanos Stack
    put:
      consumes:
      - application/json
      description: Update Network
      parameters:
      - description: Thanos Stack ID
        in: path
        name: id
        required: true
        type: string
      - description: Update Network Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.UpdateNetworkRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Response'
      summary: Update Network
      tags:
      - Thanos Stack
  /stacks/thanos/{id}/deployments:
    get:
      consumes:
      - application/json
      description: Get Deployments
      parameters:
      - description: Thanos Stack ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Response'
      summary: Get Deployments
      tags:
      - Thanos Stack
  /stacks/thanos/{id}/deployments/{deploymentId}:
    get:
      consumes:
      - application/json
      description: Get Stack Deployment
      parameters:
      - description: Thanos Stack ID
        in: path
        name: id
        required: true
        type: string
      - description: Deployment ID
        in: path
        name: deploymentId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Response'
      summary: Get Stack Deployment
      tags:
      - Thanos Stack
  /stacks/thanos/{id}/deployments/{deploymentId}/status:
    get:
      consumes:
      - application/json
      description: Get Stack Deployment Status
      parameters:
      - description: Thanos Stack ID
        in: path
        name: id
        required: true
        type: string
      - description: Deployment ID
        in: path
        name: deploymentId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Response'
      summary: Get Stack Deployment Status
      tags:
      - Thanos Stack
  /stacks/thanos/{id}/integrations:
    get:
      consumes:
      - application/json
      description: Get Integrations
      parameters:
      - description: Thanos Stack ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Response'
      summary: Get Integrations
      tags:
      - Thanos Stack
  /stacks/thanos/{id}/integrations/{integrationId}:
    get:
      consumes:
      - application/json
      description: Get Integration By ID
      parameters:
      - description: Thanos Stack ID
        in: path
        name: id
        required: true
        type: string
      - description: Integration ID
        in: path
        name: integrationId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Response'
      summary: Get Integration By ID
      tags:
      - Thanos Stack
  /stacks/thanos/{id}/integrations/block-explorer:
    delete:
      consumes:
      - application/json
      description: Uninstall Block Explorer
      parameters:
      - description: Thanos Stack ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Response'
      summary: Uninstall Block Explorer
      tags:
      - Thanos Stack
    post:
      consumes:
      - application/json
      description: Install Block Explorer
      parameters:
      - description: Thanos Stack ID
        in: path
        name: id
        required: true
        type: string
      - description: Install Block Explorer Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.InstallBlockExplorerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Response'
      summary: Install Block Explorer
      tags:
      - Thanos Stack
  /stacks/thanos/{id}/integrations/bridge:
    delete:
      consumes:
      - application/json
      description: Uninstall Bridge
      parameters:
      - description: Thanos Stack ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Response'
      summary: Uninstall Bridge
      tags:
      - Thanos Stack
    post:
      consumes:
      - application/json
      description: Install Bridge
      parameters:
      - description: Thanos Stack ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Response'
      summary: Install Bridge
      tags:
      - Thanos Stack
  /stacks/thanos/{id}/integrations/monitoring:
    delete:
      consumes:
      - application/json
      description: Uninstall Monitoring
      parameters:
      - description: Thanos Stack ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Response'
      summary: Uninstall Monitoring
      tags:
      - Thanos Stack
    post:
      consumes:
      - application/json
      description: Install Monitoring
      parameters:
      - description: Thanos Stack ID
        in: path
        name: id
        required: true
        type: string
      - description: Install Monitoring Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.InstallMonitoringRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Response'
      summary: Install Monitoring
      tags:
      - Thanos Stack
  /stacks/thanos/{id}/register-candidates:
    post:
      consumes:
      - application/json
      description: Register Candidates
      parameters:
      - description: Thanos Stack ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Response'
      summary: Register Candidates
      tags:
      - Thanos Stack
  /stacks/thanos/{id}/resume:
    post:
      consumes:
      - application/json
      description: Resume Thanos Stack
      parameters:
      - description: Thanos Stack ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Response'
      summary: Resume Thanos Stack
      tags:
      - Thanos Stack
  /stacks/thanos/{id}/status:
    get:
      consumes:
      - application/json
      description: Get Stack Status
      parameters:
      - description: Thanos Stack ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Response'
      summary: Get Stack Status
      tags:
      - Thanos Stack
  /stacks/thanos/{id}/stop:
    post:
      consumes:
      - application/json
      description: Stop Thanos Stack
      parameters:
      - description: Thanos Stack ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Response'
      summary: Stop Thanos Stack
      tags:
      - Thanos Stack
securityDefinitions:
  NoAuth:
    type: basic
swagger: "2.0"
